var evaluate_age = function() {
  var overweight_BMI_link = sample(Uniform({a: 0.0, b: 1.0}))
        // var age_35_to_49_link = flip(.12) ? 1 : 0. make these match overweight_bmi_link fomrmat
      // var age_over_50_link = flip(.18) ? 1 : 0
            // var obese_BMI_link = flip(.12) ? 1 : 0
      // var high_blood_pressure_link = flip(.06) ? 1 : 0

  var diabetes_model = function(datum) {
      var age_35_to_49 = Bernoulli({p: .1})
      var age_over_50 = Bernoulli({p: .1})

      // console.log(datum.patient)
      // console.log(sample(age_35_to_49) ? 1 : 0)
      observe(age_35_to_49, datum.observed_age_35_to_49 == 1)
      observe(age_over_50, datum.observed_age_over_50 == 1)

      //overweight: BMI is 25 to 29.9 and obese is BMI of 30 or more
      var overweight_BMI = Bernoulli({p: .1})
      var obese_BMI = Bernoulli({p: .7})


      observe(overweight_BMI, datum.observed_overweight_BMI == 1)
      observe(obese_BMI, datum.observed_obese_BMI == 1)

      //high blood pressure: over 80 diastolic
      var high_blood_pressure = Bernoulli({p: .6})

      observe(high_blood_pressure, datum.observed_high_blood_pressure == 1)
      
    //TODO FIX, need to put in other link parameters (instead of the hardcoded 0.12, 0.18)
      var diabetes_risk = 1 - ((1 - (datum.observed_age_35_to_49 ? 0 : 0.12)) * (1 - (datum.observed_age_over_50 ? 0 : 0.18)) * (1 - (datum.observed_overweight_BMI ? 0 : overweight_BMI_link)) * (1 - (datum.observed_obese_BMI ? 0 : 0.12)) * (1 - (datum.observed_high_blood_pressure ? 0 : 0.06)))
      // console.log("Diabetes")
      // console.log(diabetes_risk)

      //prior on diabetes
      var diabetes = Bernoulli({p: diabetes_risk})
      observe(diabetes, datum.observed_diabetes == 1)
      //TODO if patient doesn't have datum-observed diabetes, then instead of above line, sample from var diabetes, return T / F diabetes in the end instead of link parameters
      // http://probmods.org/chapters/hierarchical-models.html mapData 3/5 exmample
      //need to restructure, tthen store results of mapData , index into, and return all those without observed_diabetes
      // infer statment to do prediction?

      var has_measurement_noise = flip(0.1)
      //values over 30 mm
      var skin_thickness_risk = 1 - ((1 - (datum.observed_diabetes ? 0 : 0.12 )) * (1 - (has_measurement_noise ? 0 : 0.5 )) ) // 0.5 = P( skin_thickness | measurement noise)

      var skin_thickness = Bernoulli({p: skin_thickness_risk})

      observe(skin_thickness, datum.observed_skin_thickness == 1)
  }
  mapData({data: observedData}, diabetes_model)
  return {"overweightBMI link" : overweight_BMI_link}

}

var observedData = [
{patient: 4, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 0, observed_diabetes : 1, observed_skin_thickness : 1},
{patient: 16, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 1, observed_diabetes : 1, observed_skin_thickness : 1},
{patient: 57, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 1, observed_diabetes : 1, observed_skin_thickness : 0},
{patient: 58, observed_age_35_to_49: 0, observed_age_over_50: 1, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 1, observed_diabetes : 0, observed_skin_thickness : 0},
{patient: 59, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 0, observed_diabetes : 0, observed_skin_thickness : 1}, 
{patient: 66, observed_age_35_to_49: 1, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 1, observed_diabetes : 1, observed_skin_thickness : 1},
{patient: 83, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 0, observed_high_blood_pressure: 0, observed_diabetes : 0, observed_skin_thickness : 0},
{patient: 102, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 0, observed_high_blood_pressure: 1, observed_diabetes : 1, observed_skin_thickness : 0},
{patient: 109, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 1, observed_diabetes : 1, observed_skin_thickness : 0},
{patient: 136, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 0, observed_obese_BMI : 1, observed_high_blood_pressure: 0, observed_diabetes : 0, observed_skin_thickness : 0},
{patient: 137, observed_age_35_to_49: 0, observed_age_over_50: 0, observed_overweight_BMI: 1, observed_obese_BMI : 0, observed_high_blood_pressure: 0, observed_diabetes : 0, observed_skin_thickness : 0}
]

Infer({method:"SMC", particles: 1000}, evaluate_age).MAP()
